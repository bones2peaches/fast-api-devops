version: "3.8"
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    volumes:
      - /tmp/postgre:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - testing-network

  connection:
    build: ./services/postgres
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    depends_on:
      - postgres
    networks:
      - testing-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "5050:80"
    networks:
      - testing-network

  influxdb:
    image: influxdb:1.8
    networks:
      - testing-network
    environment:
      - INFLUXDB_DB=dev
      - INFLUXDB_ADMIN_USER=dev
      - INFLUXDB_ADMIN_PASSWORD=dev

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./services/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - testing-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
      - postgres
      - influxdb
      - fast-api
      - nchan-ws

    volumes:
      - ./services/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "8000:3000"
    networks:
      - testing-network

  fast-api:
    container_name: api

    build: ./api
    # command: CMD ["uvicorn", "app.main:app", "--proxy-headers", "--host", "0.0.0.0", "--port", "5000"]
    # #  #"tail -f /dev/null"
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - ./api:/home/code
    environment:
      - STAGE=DEV
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - NCHAN_USERNAME=${NCHAN_USERNAME}
      - NCHAN_PASSWORD=${NCHAN_PASSWORD}
      - NCHAN_PROTOCOL=${NCHAN_PROTOCOL}
      - NCHAN_HOST=${NCHAN_HOST}
      - NCHAN_PORT=${NCHAN_PORT}
    networks:
      - testing-network

  nchan-ws:
    container_name: nchan

    build: ./services/nchan
    ports:
      - "80:80"
    depends_on:
      - fast-api
    environment:
      - NCHAN_USERNAME=${NCHAN_USERNAME}
      - NCHAN_PASSWORD=${NCHAN_PASSWORD}
    networks:
      - testing-network

networks:
  testing-network:
    external: true
